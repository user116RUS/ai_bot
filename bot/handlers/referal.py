from bot import bot, logger
from telebot.types import CallbackQuery, Message
from bot.models import User, Transaction
import hashlib


def generate_ref_link(user_id: int) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ö–µ—à –Ω–∞ –æ—Å–Ω–æ–≤–µ user_id
    hash_object = hashlib.md5(str(user_id).encode())
    ref_code = hash_object.hexdigest()[:8]
    return f"https://t.me/jget_gpt_ai_bot?start=ref_{ref_code}"


def handle_ref_link(message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫."""
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
        ref_code = message.text.split('ref_')[1]
        new_user_id = message.from_user.id
        
        # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞–ª —Å—Å—ã–ª–∫—É
        for user in User.objects.all():
            hash_object = hashlib.md5(str(user.telegram_id).encode())
            if hash_object.hexdigest()[:8] == ref_code:
                if user.telegram_id != new_user_id:
                    referrer_user = User.objects.filter(telegram_id=new_user_id).first()
                    referrer_user.referal_id = user.telegram_id
                    referrer_user.save()
                    user.balance += 5  # –∏–∑–º–µ–Ω—Ç—å —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
                    user.save()
                    transaction = Transaction.objects.create(
                        user=user,
                        is_addition=True,
                        cash=5.0,
                        comment='bonus'
                    )
                    transaction.save()
                    bot.send_message(user.telegram_id,
                                     "–ö—Ç–æ-—Ç–æ –ø–µ—Ä–µ—à–µ–ª –ø–æ –≤–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ! –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 5 —Ä—É–±–ª–µ–π! üòä")
                    break
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏: {e}')


def get_ref_link(callback: CallbackQuery) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É."""
    try:
        user_id = callback.from_user.id
        ref_link = generate_ref_link(user_id)
        bot.send_message(
            user_id,
            f"–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n{ref_link}\n\n–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –µ—é —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –ø–æ–ª—É—á–∏—Ç–µ +5 —Ä—É–±–ª–µ–π –∑–∞ –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!"
        )
    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏: {e}')
